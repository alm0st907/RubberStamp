//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 612 // Disable "CS0612 '...' is obsolete"
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"
#pragma warning disable 8603 // Disable "CS8603 Possible null reference return"
#pragma warning disable 8604 // Disable "CS8604 Possible null reference argument for parameter"

namespace Ynab.Outputs
{
    using System = global::System;

    

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ErrorResponse
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public ErrorResponse(ErrorDetail @error)

        {

            this.Error = @error;

        }
        [System.Text.Json.Serialization.JsonPropertyName("error")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public ErrorDetail Error { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ErrorDetail
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public ErrorDetail(string @detail, string @id, string @name)

        {

            this.Id = @id;

            this.Name = @name;

            this.Detail = @detail;

        }
        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; }

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Name { get; }

        [System.Text.Json.Serialization.JsonPropertyName("detail")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Detail { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class UserResponse
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public UserResponse(Data @data)

        {

            this.Data = @data;

        }
        [System.Text.Json.Serialization.JsonPropertyName("data")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public Data Data { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class User
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public User(System.Guid @id)

        {

            this.Id = @id;

        }
        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.Guid Id { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The date format setting for the budget.  In some cases the format will not be available and will be specified as null.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class DateFormat
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public DateFormat(string @format)

        {

            this.Format = @format;

        }
        [System.Text.Json.Serialization.JsonPropertyName("format")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Format { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The currency format setting for the budget.  In some cases the format will not be available and will be specified as null.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CurrencyFormat
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public CurrencyFormat(string @currency_symbol, int @decimal_digits, string @decimal_separator, bool @display_symbol, string @example_format, string @group_separator, string @iso_code, bool @symbol_first)

        {

            this.Iso_code = @iso_code;

            this.Example_format = @example_format;

            this.Decimal_digits = @decimal_digits;

            this.Decimal_separator = @decimal_separator;

            this.Symbol_first = @symbol_first;

            this.Group_separator = @group_separator;

            this.Currency_symbol = @currency_symbol;

            this.Display_symbol = @display_symbol;

        }
        [System.Text.Json.Serialization.JsonPropertyName("iso_code")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Iso_code { get; }

        [System.Text.Json.Serialization.JsonPropertyName("example_format")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Example_format { get; }

        [System.Text.Json.Serialization.JsonPropertyName("decimal_digits")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public int Decimal_digits { get; }

        [System.Text.Json.Serialization.JsonPropertyName("decimal_separator")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Decimal_separator { get; }

        [System.Text.Json.Serialization.JsonPropertyName("symbol_first")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public bool Symbol_first { get; }

        [System.Text.Json.Serialization.JsonPropertyName("group_separator")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Group_separator { get; }

        [System.Text.Json.Serialization.JsonPropertyName("currency_symbol")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Currency_symbol { get; }

        [System.Text.Json.Serialization.JsonPropertyName("display_symbol")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public bool Display_symbol { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class BudgetSummaryResponse
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public BudgetSummaryResponse(Data2 @data)

        {

            this.Data = @data;

        }
        [System.Text.Json.Serialization.JsonPropertyName("data")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public Data2 Data { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class BudgetSummary
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public BudgetSummary(System.Collections.Generic.ICollection<Account> @accounts, CurrencyFormat @currency_format, DateFormat @date_format, System.DateTimeOffset @first_month, System.Guid @id, System.DateTimeOffset @last_modified_on, System.DateTimeOffset @last_month, string @name)

        {

            this.Id = @id;

            this.Name = @name;

            this.Last_modified_on = @last_modified_on;

            this.First_month = @first_month;

            this.Last_month = @last_month;

            this.Date_format = @date_format;

            this.Currency_format = @currency_format;

            this.Accounts = @accounts;

        }
        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.Guid Id { get; }

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Name { get; }

        /// <summary>
        /// The last time any changes were made to the budget from either a web or mobile client
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("last_modified_on")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.DateTimeOffset Last_modified_on { get; }

        /// <summary>
        /// The earliest budget month
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("first_month")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset First_month { get; }

        /// <summary>
        /// The latest budget month
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("last_month")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset Last_month { get; }

        [System.Text.Json.Serialization.JsonPropertyName("date_format")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public DateFormat Date_format { get; }

        [System.Text.Json.Serialization.JsonPropertyName("currency_format")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public CurrencyFormat Currency_format { get; }

        /// <summary>
        /// The budget accounts (only included if `include_accounts=true` specified as query parameter)
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("accounts")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<Account> Accounts { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class BudgetDetailResponse
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public BudgetDetailResponse(Data3 @data)

        {

            this.Data = @data;

        }
        [System.Text.Json.Serialization.JsonPropertyName("data")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public Data3 Data { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class BudgetDetail : BudgetSummary
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public BudgetDetail(System.Collections.Generic.ICollection<Account> @accounts, System.Collections.Generic.ICollection<Category> @categories, System.Collections.Generic.ICollection<CategoryGroup> @category_groups, CurrencyFormat @currency_format, DateFormat @date_format, System.DateTimeOffset @first_month, System.Guid @id, System.DateTimeOffset @last_modified_on, System.DateTimeOffset @last_month, System.Collections.Generic.ICollection<MonthDetail> @months, string @name, System.Collections.Generic.ICollection<PayeeLocation> @payee_locations, System.Collections.Generic.ICollection<Payee> @payees, System.Collections.Generic.ICollection<ScheduledSubTransaction> @scheduled_subtransactions, System.Collections.Generic.ICollection<ScheduledTransactionSummary> @scheduled_transactions, System.Collections.Generic.ICollection<SubTransaction> @subtransactions, System.Collections.Generic.ICollection<TransactionSummary> @transactions)

            : base(accounts, currency_format, date_format, first_month, id, last_modified_on, last_month, name)

        {

            this.Accounts = @accounts;

            this.Payees = @payees;

            this.Payee_locations = @payee_locations;

            this.Category_groups = @category_groups;

            this.Categories = @categories;

            this.Months = @months;

            this.Transactions = @transactions;

            this.Subtransactions = @subtransactions;

            this.Scheduled_transactions = @scheduled_transactions;

            this.Scheduled_subtransactions = @scheduled_subtransactions;

        }
        [System.Text.Json.Serialization.JsonPropertyName("accounts")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<Account> Accounts { get; }

        [System.Text.Json.Serialization.JsonPropertyName("payees")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<Payee> Payees { get; }

        [System.Text.Json.Serialization.JsonPropertyName("payee_locations")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<PayeeLocation> Payee_locations { get; }

        [System.Text.Json.Serialization.JsonPropertyName("category_groups")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<CategoryGroup> Category_groups { get; }

        [System.Text.Json.Serialization.JsonPropertyName("categories")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<Category> Categories { get; }

        [System.Text.Json.Serialization.JsonPropertyName("months")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<MonthDetail> Months { get; }

        [System.Text.Json.Serialization.JsonPropertyName("transactions")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<TransactionSummary> Transactions { get; }

        [System.Text.Json.Serialization.JsonPropertyName("subtransactions")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<SubTransaction> Subtransactions { get; }

        [System.Text.Json.Serialization.JsonPropertyName("scheduled_transactions")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<ScheduledTransactionSummary> Scheduled_transactions { get; }

        [System.Text.Json.Serialization.JsonPropertyName("scheduled_subtransactions")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<ScheduledSubTransaction> Scheduled_subtransactions { get; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class BudgetSettingsResponse
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public BudgetSettingsResponse(Data4 @data)

        {

            this.Data = @data;

        }
        [System.Text.Json.Serialization.JsonPropertyName("data")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public Data4 Data { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class BudgetSettings
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public BudgetSettings(CurrencyFormat @currency_format, DateFormat @date_format)

        {

            this.Date_format = @date_format;

            this.Currency_format = @currency_format;

        }
        [System.Text.Json.Serialization.JsonPropertyName("date_format")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public DateFormat Date_format { get; }

        [System.Text.Json.Serialization.JsonPropertyName("currency_format")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public CurrencyFormat Currency_format { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AccountsResponse
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public AccountsResponse(Data5 @data)

        {

            this.Data = @data;

        }
        [System.Text.Json.Serialization.JsonPropertyName("data")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public Data5 Data { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AccountResponse
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public AccountResponse(Data6 @data)

        {

            this.Data = @data;

        }
        [System.Text.Json.Serialization.JsonPropertyName("data")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public Data6 Data { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Account
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public Account(long @balance, long @cleared_balance, bool @closed, LoanAccountPeriodicValue @debt_escrow_amounts, LoanAccountPeriodicValue @debt_interest_rates, LoanAccountPeriodicValue @debt_minimum_payments, long? @debt_original_balance, bool @deleted, bool @direct_import_in_error, bool @direct_import_linked, System.Guid @id, System.DateTimeOffset? @last_reconciled_at, string @name, string @note, bool @on_budget, System.Guid? @transfer_payee_id, AccountType @type, long @uncleared_balance)

        {

            this.Id = @id;

            this.Name = @name;

            this.Type = @type;

            this.On_budget = @on_budget;

            this.Closed = @closed;

            this.Note = @note;

            this.Balance = @balance;

            this.Cleared_balance = @cleared_balance;

            this.Uncleared_balance = @uncleared_balance;

            this.Transfer_payee_id = @transfer_payee_id;

            this.Direct_import_linked = @direct_import_linked;

            this.Direct_import_in_error = @direct_import_in_error;

            this.Last_reconciled_at = @last_reconciled_at;

            this.Debt_original_balance = @debt_original_balance;

            this.Debt_interest_rates = @debt_interest_rates;

            this.Debt_minimum_payments = @debt_minimum_payments;

            this.Debt_escrow_amounts = @debt_escrow_amounts;

            this.Deleted = @deleted;

        }
        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.Guid Id { get; }

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Name { get; }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public AccountType Type { get; }

        /// <summary>
        /// Whether this account is on budget or not
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("on_budget")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public bool On_budget { get; }

        /// <summary>
        /// Whether this account is closed or not
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("closed")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public bool Closed { get; }

        [System.Text.Json.Serialization.JsonPropertyName("note")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Note { get; }

        /// <summary>
        /// The current balance of the account in milliunits format
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("balance")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public long Balance { get; }

        /// <summary>
        /// The current cleared balance of the account in milliunits format
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("cleared_balance")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public long Cleared_balance { get; }

        /// <summary>
        /// The current uncleared balance of the account in milliunits format
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("uncleared_balance")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public long Uncleared_balance { get; }

        /// <summary>
        /// The payee id which should be used when transferring to this account
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("transfer_payee_id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public System.Guid? Transfer_payee_id { get; }

        /// <summary>
        /// Whether or not the account is linked to a financial institution for automatic transaction import.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("direct_import_linked")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool Direct_import_linked { get; }

        /// <summary>
        /// If an account linked to a financial institution (direct_import_linked=true) and the linked connection is not in a healthy state, this will be true.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("direct_import_in_error")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool Direct_import_in_error { get; }

        /// <summary>
        /// A date/time specifying when the account was last reconciled.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("last_reconciled_at")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.DateTimeOffset? Last_reconciled_at { get; }

        /// <summary>
        /// The original debt/loan account balance, specified in milliunits format.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("debt_original_balance")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public long? Debt_original_balance { get; }

        [System.Text.Json.Serialization.JsonPropertyName("debt_interest_rates")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public LoanAccountPeriodicValue Debt_interest_rates { get; }

        [System.Text.Json.Serialization.JsonPropertyName("debt_minimum_payments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public LoanAccountPeriodicValue Debt_minimum_payments { get; }

        [System.Text.Json.Serialization.JsonPropertyName("debt_escrow_amounts")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public LoanAccountPeriodicValue Debt_escrow_amounts { get; }

        /// <summary>
        /// Whether or not the account has been deleted.  Deleted accounts will only be included in delta requests.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("deleted")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public bool Deleted { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PostAccountWrapper
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public PostAccountWrapper(SaveAccount @account)

        {

            this.Account = @account;

        }
        [System.Text.Json.Serialization.JsonPropertyName("account")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public SaveAccount Account { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SaveAccount
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public SaveAccount(long @balance, string @name, AccountType @type)

        {

            this.Name = @name;

            this.Type = @type;

            this.Balance = @balance;

        }    /// <summary>
        /// The name of the account
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Name { get; }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public AccountType Type { get; }

        /// <summary>
        /// The current balance of the account in milliunits format
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("balance")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public long Balance { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanAccountPeriodicValue : System.Collections.Generic.Dictionary<string, long>
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public LoanAccountPeriodicValue()

            : base()

        {

        }
    }

    /// <summary>
    /// The type of account
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum AccountType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"checking")]
        Checking = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"savings")]
        Savings = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"cash")]
        Cash = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"creditCard")]
        CreditCard = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"lineOfCredit")]
        LineOfCredit = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"otherAsset")]
        OtherAsset = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"otherLiability")]
        OtherLiability = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"mortgage")]
        Mortgage = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"autoLoan")]
        AutoLoan = 8,

        [System.Runtime.Serialization.EnumMember(Value = @"studentLoan")]
        StudentLoan = 9,

        [System.Runtime.Serialization.EnumMember(Value = @"personalLoan")]
        PersonalLoan = 10,

        [System.Runtime.Serialization.EnumMember(Value = @"medicalDebt")]
        MedicalDebt = 11,

        [System.Runtime.Serialization.EnumMember(Value = @"otherDebt")]
        OtherDebt = 12,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CategoriesResponse
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public CategoriesResponse(Data7 @data)

        {

            this.Data = @data;

        }
        [System.Text.Json.Serialization.JsonPropertyName("data")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public Data7 Data { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CategoryResponse
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public CategoryResponse(Data8 @data)

        {

            this.Data = @data;

        }
        [System.Text.Json.Serialization.JsonPropertyName("data")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public Data8 Data { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CategoryGroupWithCategories : CategoryGroup
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public CategoryGroupWithCategories(System.Collections.Generic.ICollection<Category> @categories, bool @deleted, bool @hidden, System.Guid @id, string @name)

            : base(deleted, hidden, id, name)

        {

            this.Categories = @categories;

        }    /// <summary>
        /// Category group categories.  Amounts (budgeted, activity, balance, etc.) are specific to the current budget month (UTC).
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("categories")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<Category> Categories { get; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CategoryGroup
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public CategoryGroup(bool @deleted, bool @hidden, System.Guid @id, string @name)

        {

            this.Id = @id;

            this.Name = @name;

            this.Hidden = @hidden;

            this.Deleted = @deleted;

        }
        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.Guid Id { get; }

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Name { get; }

        /// <summary>
        /// Whether or not the category group is hidden
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("hidden")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public bool Hidden { get; }

        /// <summary>
        /// Whether or not the category group has been deleted.  Deleted category groups will only be included in delta requests.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("deleted")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public bool Deleted { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Category
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public Category(long @activity, long @balance, long @budgeted, System.Guid @category_group_id, string @category_group_name, bool @deleted, int? @goal_cadence, int? @goal_cadence_frequency, System.DateTimeOffset? @goal_creation_month, int? @goal_day, int? @goal_months_to_budget, long? @goal_overall_funded, long? @goal_overall_left, int? @goal_percentage_complete, long? @goal_target, System.DateTimeOffset? @goal_target_month, CategoryGoal_type? @goal_type, long? @goal_under_funded, bool @hidden, System.Guid @id, string @name, string @note, System.Guid? @original_category_group_id)

        {

            this.Id = @id;

            this.Category_group_id = @category_group_id;

            this.Category_group_name = @category_group_name;

            this.Name = @name;

            this.Hidden = @hidden;

            this.Original_category_group_id = @original_category_group_id;

            this.Note = @note;

            this.Budgeted = @budgeted;

            this.Activity = @activity;

            this.Balance = @balance;

            this.Goal_type = @goal_type;

            this.Goal_day = @goal_day;

            this.Goal_cadence = @goal_cadence;

            this.Goal_cadence_frequency = @goal_cadence_frequency;

            this.Goal_creation_month = @goal_creation_month;

            this.Goal_target = @goal_target;

            this.Goal_target_month = @goal_target_month;

            this.Goal_percentage_complete = @goal_percentage_complete;

            this.Goal_months_to_budget = @goal_months_to_budget;

            this.Goal_under_funded = @goal_under_funded;

            this.Goal_overall_funded = @goal_overall_funded;

            this.Goal_overall_left = @goal_overall_left;

            this.Deleted = @deleted;

        }
        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.Guid Id { get; }

        [System.Text.Json.Serialization.JsonPropertyName("category_group_id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.Guid Category_group_id { get; }

        [System.Text.Json.Serialization.JsonPropertyName("category_group_name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Category_group_name { get; }

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Name { get; }

        /// <summary>
        /// Whether or not the category is hidden
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("hidden")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public bool Hidden { get; }

        /// <summary>
        /// DEPRECATED: No longer used.  Value will always be null.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("original_category_group_id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Guid? Original_category_group_id { get; }

        [System.Text.Json.Serialization.JsonPropertyName("note")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Note { get; }

        /// <summary>
        /// Budgeted amount in milliunits format
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("budgeted")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public long Budgeted { get; }

        /// <summary>
        /// Activity amount in milliunits format
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("activity")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public long Activity { get; }

        /// <summary>
        /// Balance in milliunits format
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("balance")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public long Balance { get; }

        /// <summary>
        /// The type of goal, if the category has a goal (TB='Target Category Balance', TBD='Target Category Balance by Date', MF='Monthly Funding', NEED='Plan Your Spending')
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("goal_type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public CategoryGoal_type? Goal_type { get; }

        /// <summary>
        /// A day offset modifier for the goal's due date. When goal_cadence is 2 (Weekly), this value specifies which day of the week the goal is due (0 = Sunday, 6 = Saturday). Otherwise, this value specifies which day of the month the goal is due (1 = 1st, 31 = 31st, null = Last day of Month).
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("goal_day")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public int? Goal_day { get; }

        /// <summary>
        /// The goal cadence. Value in range 0-14. There are two subsets of these values which behave differently. For values 0, 1, 2, and 13, the goal's due date repeats every goal_cadence * goal_cadence_frequency, where 0 = None, 1 = Monthly, 2 = Weekly, and 13 = Yearly. For example, goal_cadence 1 with goal_cadence_frequency 2 means the goal is due every other month. For values 3-12 and 14, goal_cadence_frequency is ignored and the goal's due date repeats every goal_cadence, where 3 = Every 2 Months, 4 = Every 3 Months, ..., 12 = Every 11 Months, and 14 = Every 2 Years.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("goal_cadence")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public int? Goal_cadence { get; }

        /// <summary>
        /// The goal cadence frequency. When goal_cadence is 0, 1, 2, or 13, a goal's due date repeats every goal_cadence * goal_cadence_frequency. For example, goal_cadence 1 with goal_cadence_frequency 2 means the goal is due every other month.  When goal_cadence is 3-12 or 14, goal_cadence_frequency is ignored.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("goal_cadence_frequency")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public int? Goal_cadence_frequency { get; }

        /// <summary>
        /// The month a goal was created
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("goal_creation_month")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? Goal_creation_month { get; }

        /// <summary>
        /// The goal target amount in milliunits
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("goal_target")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public long? Goal_target { get; }

        /// <summary>
        /// The original target month for the goal to be completed.  Only some goal types specify this date.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("goal_target_month")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? Goal_target_month { get; }

        /// <summary>
        /// The percentage completion of the goal
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("goal_percentage_complete")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public int? Goal_percentage_complete { get; }

        /// <summary>
        /// The number of months, including the current month, left in the current goal period.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("goal_months_to_budget")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public int? Goal_months_to_budget { get; }

        /// <summary>
        /// The amount of funding still needed in the current month to stay on track towards completing the goal within the current goal period. This amount will generally correspond to the 'Underfunded' amount in the web and mobile clients except when viewing a category with a Needed for Spending Goal in a future month.  The web and mobile clients will ignore any funding from a prior goal period when viewing category with a Needed for Spending Goal in a future month.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("goal_under_funded")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public long? Goal_under_funded { get; }

        /// <summary>
        /// The total amount funded towards the goal within the current goal period.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("goal_overall_funded")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public long? Goal_overall_funded { get; }

        /// <summary>
        /// The amount of funding still needed to complete the goal within the current goal period.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("goal_overall_left")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public long? Goal_overall_left { get; }

        /// <summary>
        /// Whether or not the category has been deleted.  Deleted categories will only be included in delta requests.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("deleted")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public bool Deleted { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SaveCategoryResponse
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public SaveCategoryResponse(Data9 @data)

        {

            this.Data = @data;

        }
        [System.Text.Json.Serialization.JsonPropertyName("data")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public Data9 Data { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PayeesResponse
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public PayeesResponse(Data10 @data)

        {

            this.Data = @data;

        }
        [System.Text.Json.Serialization.JsonPropertyName("data")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public Data10 Data { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PayeeResponse
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public PayeeResponse(Data11 @data)

        {

            this.Data = @data;

        }
        [System.Text.Json.Serialization.JsonPropertyName("data")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public Data11 Data { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Payee
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public Payee(bool @deleted, System.Guid @id, string @name, string @transfer_account_id)

        {

            this.Id = @id;

            this.Name = @name;

            this.Transfer_account_id = @transfer_account_id;

            this.Deleted = @deleted;

        }
        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.Guid Id { get; }

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Name { get; }

        /// <summary>
        /// If a transfer payee, the `account_id` to which this payee transfers to
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("transfer_account_id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Transfer_account_id { get; }

        /// <summary>
        /// Whether or not the payee has been deleted.  Deleted payees will only be included in delta requests.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("deleted")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public bool Deleted { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PayeeLocationsResponse
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public PayeeLocationsResponse(Data12 @data)

        {

            this.Data = @data;

        }
        [System.Text.Json.Serialization.JsonPropertyName("data")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public Data12 Data { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PayeeLocationResponse
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public PayeeLocationResponse(Data13 @data)

        {

            this.Data = @data;

        }
        [System.Text.Json.Serialization.JsonPropertyName("data")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public Data13 Data { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PayeeLocation
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public PayeeLocation(bool @deleted, System.Guid @id, string @latitude, string @longitude, System.Guid @payee_id)

        {

            this.Id = @id;

            this.Payee_id = @payee_id;

            this.Latitude = @latitude;

            this.Longitude = @longitude;

            this.Deleted = @deleted;

        }
        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.Guid Id { get; }

        [System.Text.Json.Serialization.JsonPropertyName("payee_id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.Guid Payee_id { get; }

        [System.Text.Json.Serialization.JsonPropertyName("latitude")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Latitude { get; }

        [System.Text.Json.Serialization.JsonPropertyName("longitude")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Longitude { get; }

        /// <summary>
        /// Whether or not the payee location has been deleted.  Deleted payee locations will only be included in delta requests.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("deleted")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public bool Deleted { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class TransactionsResponse
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public TransactionsResponse(Data14 @data)

        {

            this.Data = @data;

        }
        [System.Text.Json.Serialization.JsonPropertyName("data")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public Data14 Data { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class HybridTransactionsResponse
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public HybridTransactionsResponse(Data15 @data)

        {

            this.Data = @data;

        }
        [System.Text.Json.Serialization.JsonPropertyName("data")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public Data15 Data { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PutTransactionWrapper
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public PutTransactionWrapper(SaveTransaction @transaction)

        {

            this.Transaction = @transaction;

        }
        [System.Text.Json.Serialization.JsonPropertyName("transaction")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public SaveTransaction Transaction { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PostTransactionsWrapper
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public PostTransactionsWrapper(SaveTransaction @transaction, System.Collections.Generic.ICollection<SaveTransaction> @transactions)

        {

            this.Transaction = @transaction;

            this.Transactions = @transactions;

        }
        [System.Text.Json.Serialization.JsonPropertyName("transaction")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public SaveTransaction Transaction { get; }

        [System.Text.Json.Serialization.JsonPropertyName("transactions")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<SaveTransaction> Transactions { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SaveTransaction : SaveTransactionWithOptionalFields
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public SaveTransaction(System.Guid @account_id, long @amount, bool @approved, System.Guid? @category_id, SaveTransactionWithOptionalFieldsCleared @cleared, System.DateTimeOffset @date, SaveTransactionWithOptionalFieldsFlag_color? @flag_color, string @import_id, string @memo, System.Guid? @payee_id, string @payee_name, System.Collections.Generic.ICollection<SaveSubTransaction> @subtransactions)

            : base(account_id, amount, approved, category_id, cleared, date, flag_color, import_id, memo, payee_id, payee_name, subtransactions)

        {

        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PatchTransactionsWrapper
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public PatchTransactionsWrapper(System.Collections.Generic.ICollection<SaveTransactionWithId> @transactions)

        {

            this.Transactions = @transactions;

        }
        [System.Text.Json.Serialization.JsonPropertyName("transactions")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<SaveTransactionWithId> Transactions { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SaveTransactionWithId : SaveTransactionWithOptionalFields
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public SaveTransactionWithId(System.Guid @account_id, long @amount, bool @approved, System.Guid? @category_id, SaveTransactionWithOptionalFieldsCleared @cleared, System.DateTimeOffset @date, SaveTransactionWithOptionalFieldsFlag_color? @flag_color, string @id, string @import_id, string @memo, System.Guid? @payee_id, string @payee_name, System.Collections.Generic.ICollection<SaveSubTransaction> @subtransactions)

            : base(account_id, amount, approved, category_id, cleared, date, flag_color, import_id, memo, payee_id, payee_name, subtransactions)

        {

            this.Id = @id;

        }
        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Id { get; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SaveTransactionWithOptionalFields
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public SaveTransactionWithOptionalFields(System.Guid @account_id, long @amount, bool @approved, System.Guid? @category_id, SaveTransactionWithOptionalFieldsCleared @cleared, System.DateTimeOffset @date, SaveTransactionWithOptionalFieldsFlag_color? @flag_color, string @import_id, string @memo, System.Guid? @payee_id, string @payee_name, System.Collections.Generic.ICollection<SaveSubTransaction> @subtransactions)

        {

            this.Account_id = @account_id;

            this.Date = @date;

            this.Amount = @amount;

            this.Payee_id = @payee_id;

            this.Payee_name = @payee_name;

            this.Category_id = @category_id;

            this.Memo = @memo;

            this.Cleared = @cleared;

            this.Approved = @approved;

            this.Flag_color = @flag_color;

            this.Import_id = @import_id;

            this.Subtransactions = @subtransactions;

        }
        [System.Text.Json.Serialization.JsonPropertyName("account_id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Guid Account_id { get; }

        /// <summary>
        /// The transaction date in ISO format (e.g. 2016-12-01).  Future dates (scheduled transactions) are not permitted.  Split transaction dates cannot be changed and if a different date is supplied it will be ignored.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("date")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset Date { get; }

        /// <summary>
        /// The transaction amount in milliunits format.  Split transaction amounts cannot be changed and if a different amount is supplied it will be ignored.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public long Amount { get; }

        /// <summary>
        /// The payee for the transaction.  To create a transfer between two accounts, use the account transfer payee pointing to the target account.  Account transfer payees are specified as `tranfer_payee_id` on the account resource.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("payee_id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Guid? Payee_id { get; }

        /// <summary>
        /// The payee name.  If a `payee_name` value is provided and `payee_id` has a null value, the `payee_name` value will be used to resolve the payee by either (1) a matching payee rename rule (only if `import_id` is also specified) or (2) a payee with the same name or (3) creation of a new payee.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("payee_name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.ComponentModel.DataAnnotations.StringLength(50)]
        public string Payee_name { get; }

        /// <summary>
        /// The category for the transaction.  To configure a split transaction, you can specify null for `category_id` and provide a `subtransactions` array as part of the transaction object.  If an existing transaction is a split, the `category_id` cannot be changed.  Credit Card Payment categories are not permitted and will be ignored if supplied.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("category_id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Guid? Category_id { get; }

        [System.Text.Json.Serialization.JsonPropertyName("memo")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.ComponentModel.DataAnnotations.StringLength(200)]
        public string Memo { get; }

        /// <summary>
        /// The cleared status of the transaction
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("cleared")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public SaveTransactionWithOptionalFieldsCleared Cleared { get; }

        /// <summary>
        /// Whether or not the transaction is approved.  If not supplied, transaction will be unapproved by default.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("approved")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool Approved { get; }

        /// <summary>
        /// The transaction flag
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("flag_color")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public SaveTransactionWithOptionalFieldsFlag_color? Flag_color { get; }

        /// <summary>
        /// If specified, the new transaction will be assigned this `import_id` and considered "imported".  We will also attempt to match this imported transaction to an existing "user-entered" transation on the same account, with the same amount, and with a date +/-10 days from the imported transaction date.&lt;br&gt;&lt;br&gt;Transactions imported through File Based Import or Direct Import (not through the API) are assigned an import_id in the format: 'YNAB:[milliunit_amount]:[iso_date]:[occurrence]'. For example, a transaction dated 2015-12-30 in the amount of -$294.23 USD would have an import_id of 'YNAB:-294230:2015-12-30:1'.  If a second transaction on the same account was imported and had the same date and same amount, its import_id would be 'YNAB:-294230:2015-12-30:2'.  Using a consistent format will prevent duplicates through Direct Import and File Based Import.&lt;br&gt;&lt;br&gt;If import_id is omitted or specified as null, the transaction will be treated as a "user-entered" transaction. As such, it will be eligible to be matched against transactions later being imported (via DI, FBI, or API).
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("import_id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.ComponentModel.DataAnnotations.StringLength(36)]
        public string Import_id { get; }

        /// <summary>
        /// An array of subtransactions to configure a transaction as a split. Updating `subtransactions` on an existing split transaction is not supported.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("subtransactions")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<SaveSubTransaction> Subtransactions { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SaveSubTransaction
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public SaveSubTransaction(long @amount, System.Guid? @category_id, string @memo, System.Guid? @payee_id, string @payee_name)

        {

            this.Amount = @amount;

            this.Payee_id = @payee_id;

            this.Payee_name = @payee_name;

            this.Category_id = @category_id;

            this.Memo = @memo;

        }    /// <summary>
        /// The subtransaction amount in milliunits format.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public long Amount { get; }

        /// <summary>
        /// The payee for the subtransaction.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("payee_id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Guid? Payee_id { get; }

        /// <summary>
        /// The payee name.  If a `payee_name` value is provided and `payee_id` has a null value, the `payee_name` value will be used to resolve the payee by either (1) a matching payee rename rule (only if import_id is also specified on parent transaction) or (2) a payee with the same name or (3) creation of a new payee.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("payee_name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.ComponentModel.DataAnnotations.StringLength(50)]
        public string Payee_name { get; }

        /// <summary>
        /// The category for the subtransaction.  Credit Card Payment categories are not permitted and will be ignored if supplied.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("category_id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Guid? Category_id { get; }

        [System.Text.Json.Serialization.JsonPropertyName("memo")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.ComponentModel.DataAnnotations.StringLength(200)]
        public string Memo { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SaveTransactionsResponse
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public SaveTransactionsResponse(Data16 @data)

        {

            this.Data = @data;

        }
        [System.Text.Json.Serialization.JsonPropertyName("data")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public Data16 Data { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class TransactionResponse
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public TransactionResponse(Data17 @data)

        {

            this.Data = @data;

        }
        [System.Text.Json.Serialization.JsonPropertyName("data")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public Data17 Data { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class TransactionSummary
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public TransactionSummary(System.Guid @account_id, long @amount, bool @approved, System.Guid? @category_id, TransactionSummaryCleared @cleared, System.DateTimeOffset @date, TransactionSummaryDebt_transaction_type? @debt_transaction_type, bool @deleted, TransactionSummaryFlag_color? @flag_color, string @id, string @import_id, string @import_payee_name, string @import_payee_name_original, string @matched_transaction_id, string @memo, System.Guid? @payee_id, System.Guid? @transfer_account_id, string @transfer_transaction_id)

        {

            this.Id = @id;

            this.Date = @date;

            this.Amount = @amount;

            this.Memo = @memo;

            this.Cleared = @cleared;

            this.Approved = @approved;

            this.Flag_color = @flag_color;

            this.Account_id = @account_id;

            this.Payee_id = @payee_id;

            this.Category_id = @category_id;

            this.Transfer_account_id = @transfer_account_id;

            this.Transfer_transaction_id = @transfer_transaction_id;

            this.Matched_transaction_id = @matched_transaction_id;

            this.Import_id = @import_id;

            this.Import_payee_name = @import_payee_name;

            this.Import_payee_name_original = @import_payee_name_original;

            this.Debt_transaction_type = @debt_transaction_type;

            this.Deleted = @deleted;

        }
        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; }

        /// <summary>
        /// The transaction date in ISO format (e.g. 2016-12-01)
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("date")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset Date { get; }

        /// <summary>
        /// The transaction amount in milliunits format
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public long Amount { get; }

        [System.Text.Json.Serialization.JsonPropertyName("memo")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Memo { get; }

        /// <summary>
        /// The cleared status of the transaction
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("cleared")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public TransactionSummaryCleared Cleared { get; }

        /// <summary>
        /// Whether or not the transaction is approved
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("approved")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public bool Approved { get; }

        /// <summary>
        /// The transaction flag
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("flag_color")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public TransactionSummaryFlag_color? Flag_color { get; }

        [System.Text.Json.Serialization.JsonPropertyName("account_id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.Guid Account_id { get; }

        [System.Text.Json.Serialization.JsonPropertyName("payee_id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Guid? Payee_id { get; }

        [System.Text.Json.Serialization.JsonPropertyName("category_id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Guid? Category_id { get; }

        /// <summary>
        /// If a transfer transaction, the account to which it transfers
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("transfer_account_id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Guid? Transfer_account_id { get; }

        /// <summary>
        /// If a transfer transaction, the id of transaction on the other side of the transfer
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("transfer_transaction_id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Transfer_transaction_id { get; }

        /// <summary>
        /// If transaction is matched, the id of the matched transaction
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("matched_transaction_id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Matched_transaction_id { get; }

        /// <summary>
        /// If the transaction was imported, this field is a unique (by account) import identifier.  If this transaction was imported through File Based Import or Direct Import and not through the API, the import_id will have the format: 'YNAB:[milliunit_amount]:[iso_date]:[occurrence]'.  For example, a transaction dated 2015-12-30 in the amount of -$294.23 USD would have an import_id of 'YNAB:-294230:2015-12-30:1'.  If a second transaction on the same account was imported and had the same date and same amount, its import_id would be 'YNAB:-294230:2015-12-30:2'.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("import_id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Import_id { get; }

        /// <summary>
        /// If the transaction was imported, the payee name that was used when importing and before applying any payee rename rules
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("import_payee_name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Import_payee_name { get; }

        /// <summary>
        /// If the transaction was imported, the original payee name as it appeared on the statement
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("import_payee_name_original")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Import_payee_name_original { get; }

        /// <summary>
        /// If the transaction is a debt/loan account transaction, the type of transaction
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("debt_transaction_type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public TransactionSummaryDebt_transaction_type? Debt_transaction_type { get; }

        /// <summary>
        /// Whether or not the transaction has been deleted.  Deleted transactions will only be included in delta requests.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("deleted")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public bool Deleted { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class TransactionDetail : TransactionSummary
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public TransactionDetail(System.Guid @account_id, string @account_name, long @amount, bool @approved, System.Guid? @category_id, string @category_name, TransactionSummaryCleared @cleared, System.DateTimeOffset @date, TransactionSummaryDebt_transaction_type? @debt_transaction_type, bool @deleted, TransactionSummaryFlag_color? @flag_color, string @id, string @import_id, string @import_payee_name, string @import_payee_name_original, string @matched_transaction_id, string @memo, System.Guid? @payee_id, string @payee_name, System.Collections.Generic.ICollection<SubTransaction> @subtransactions, System.Guid? @transfer_account_id, string @transfer_transaction_id)

            : base(account_id, amount, approved, category_id, cleared, date, debt_transaction_type, deleted, flag_color, id, import_id, import_payee_name, import_payee_name_original, matched_transaction_id, memo, payee_id, transfer_account_id, transfer_transaction_id)

        {

            this.Account_name = @account_name;

            this.Payee_name = @payee_name;

            this.Category_name = @category_name;

            this.Subtransactions = @subtransactions;

        }
        [System.Text.Json.Serialization.JsonPropertyName("account_name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Account_name { get; }

        [System.Text.Json.Serialization.JsonPropertyName("payee_name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Payee_name { get; }

        /// <summary>
        /// The name of the category.  If a split transaction, this will be 'Split'.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("category_name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Category_name { get; }

        /// <summary>
        /// If a split transaction, the subtransactions.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("subtransactions")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<SubTransaction> Subtransactions { get; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class HybridTransaction : TransactionSummary
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public HybridTransaction(System.Guid @account_id, string @account_name, long @amount, bool @approved, System.Guid? @category_id, string @category_name, TransactionSummaryCleared @cleared, System.DateTimeOffset @date, TransactionSummaryDebt_transaction_type? @debt_transaction_type, bool @deleted, TransactionSummaryFlag_color? @flag_color, string @id, string @import_id, string @import_payee_name, string @import_payee_name_original, string @matched_transaction_id, string @memo, string @parent_transaction_id, System.Guid? @payee_id, string @payee_name, System.Guid? @transfer_account_id, string @transfer_transaction_id, HybridTransactionType @type)

            : base(account_id, amount, approved, category_id, cleared, date, debt_transaction_type, deleted, flag_color, id, import_id, import_payee_name, import_payee_name_original, matched_transaction_id, memo, payee_id, transfer_account_id, transfer_transaction_id)

        {

            this.Type = @type;

            this.Parent_transaction_id = @parent_transaction_id;

            this.Account_name = @account_name;

            this.Payee_name = @payee_name;

            this.Category_name = @category_name;

        }    /// <summary>
        /// Whether the hybrid transaction represents a regular transaction or a subtransaction
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public HybridTransactionType Type { get; }

        /// <summary>
        /// For subtransaction types, this is the id of the parent transaction.  For transaction types, this id will be always be null.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("parent_transaction_id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Parent_transaction_id { get; }

        [System.Text.Json.Serialization.JsonPropertyName("account_name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Account_name { get; }

        [System.Text.Json.Serialization.JsonPropertyName("payee_name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Payee_name { get; }

        /// <summary>
        /// The name of the category.  If a split transaction, this will be 'Split'.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("category_name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Category_name { get; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PatchCategoryWrapper
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public PatchCategoryWrapper(SaveCategory @category)

        {

            this.Category = @category;

        }
        [System.Text.Json.Serialization.JsonPropertyName("category")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public SaveCategory Category { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SaveCategory
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public SaveCategory(System.Guid @category_group_id, string @name, string @note)

        {

            this.Name = @name;

            this.Note = @note;

            this.Category_group_id = @category_group_id;

        }
        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Name { get; }

        [System.Text.Json.Serialization.JsonPropertyName("note")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Note { get; }

        [System.Text.Json.Serialization.JsonPropertyName("category_group_id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Guid Category_group_id { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PatchMonthCategoryWrapper
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public PatchMonthCategoryWrapper(SaveMonthCategory @category)

        {

            this.Category = @category;

        }
        [System.Text.Json.Serialization.JsonPropertyName("category")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public SaveMonthCategory Category { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SaveMonthCategory
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public SaveMonthCategory(long @budgeted)

        {

            this.Budgeted = @budgeted;

        }    /// <summary>
        /// Budgeted amount in milliunits format
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("budgeted")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public long Budgeted { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class TransactionsImportResponse
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public TransactionsImportResponse(Data18 @data)

        {

            this.Data = @data;

        }
        [System.Text.Json.Serialization.JsonPropertyName("data")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public Data18 Data { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class BulkResponse
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public BulkResponse(Data19 @data)

        {

            this.Data = @data;

        }
        [System.Text.Json.Serialization.JsonPropertyName("data")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public Data19 Data { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class BulkTransactions
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public BulkTransactions(System.Collections.Generic.ICollection<SaveTransaction> @transactions)

        {

            this.Transactions = @transactions;

        }
        [System.Text.Json.Serialization.JsonPropertyName("transactions")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<SaveTransaction> Transactions { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubTransaction
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public SubTransaction(long @amount, System.Guid? @category_id, string @category_name, bool @deleted, string @id, string @memo, System.Guid? @payee_id, string @payee_name, string @transaction_id, System.Guid? @transfer_account_id, string @transfer_transaction_id)

        {

            this.Id = @id;

            this.Transaction_id = @transaction_id;

            this.Amount = @amount;

            this.Memo = @memo;

            this.Payee_id = @payee_id;

            this.Payee_name = @payee_name;

            this.Category_id = @category_id;

            this.Category_name = @category_name;

            this.Transfer_account_id = @transfer_account_id;

            this.Transfer_transaction_id = @transfer_transaction_id;

            this.Deleted = @deleted;

        }
        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; }

        [System.Text.Json.Serialization.JsonPropertyName("transaction_id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Transaction_id { get; }

        /// <summary>
        /// The subtransaction amount in milliunits format
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public long Amount { get; }

        [System.Text.Json.Serialization.JsonPropertyName("memo")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Memo { get; }

        [System.Text.Json.Serialization.JsonPropertyName("payee_id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Guid? Payee_id { get; }

        [System.Text.Json.Serialization.JsonPropertyName("payee_name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Payee_name { get; }

        [System.Text.Json.Serialization.JsonPropertyName("category_id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Guid? Category_id { get; }

        [System.Text.Json.Serialization.JsonPropertyName("category_name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Category_name { get; }

        /// <summary>
        /// If a transfer, the account_id which the subtransaction transfers to
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("transfer_account_id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Guid? Transfer_account_id { get; }

        /// <summary>
        /// If a transfer, the id of transaction on the other side of the transfer
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("transfer_transaction_id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Transfer_transaction_id { get; }

        /// <summary>
        /// Whether or not the subtransaction has been deleted.  Deleted subtransactions will only be included in delta requests.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("deleted")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public bool Deleted { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ScheduledTransactionsResponse
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public ScheduledTransactionsResponse(Data20 @data)

        {

            this.Data = @data;

        }
        [System.Text.Json.Serialization.JsonPropertyName("data")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public Data20 Data { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ScheduledTransactionResponse
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public ScheduledTransactionResponse(Data21 @data)

        {

            this.Data = @data;

        }
        [System.Text.Json.Serialization.JsonPropertyName("data")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public Data21 Data { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ScheduledTransactionSummary
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public ScheduledTransactionSummary(System.Guid @account_id, long @amount, System.Guid? @category_id, System.DateTimeOffset @date_first, System.DateTimeOffset @date_next, bool @deleted, ScheduledTransactionSummaryFlag_color? @flag_color, ScheduledTransactionSummaryFrequency @frequency, System.Guid @id, string @memo, System.Guid? @payee_id, System.Guid? @transfer_account_id)

        {

            this.Id = @id;

            this.Date_first = @date_first;

            this.Date_next = @date_next;

            this.Frequency = @frequency;

            this.Amount = @amount;

            this.Memo = @memo;

            this.Flag_color = @flag_color;

            this.Account_id = @account_id;

            this.Payee_id = @payee_id;

            this.Category_id = @category_id;

            this.Transfer_account_id = @transfer_account_id;

            this.Deleted = @deleted;

        }
        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.Guid Id { get; }

        /// <summary>
        /// The first date for which the Scheduled Transaction was scheduled.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("date_first")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset Date_first { get; }

        /// <summary>
        /// The next date for which the Scheduled Transaction is scheduled.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("date_next")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset Date_next { get; }

        [System.Text.Json.Serialization.JsonPropertyName("frequency")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public ScheduledTransactionSummaryFrequency Frequency { get; }

        /// <summary>
        /// The scheduled transaction amount in milliunits format
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public long Amount { get; }

        [System.Text.Json.Serialization.JsonPropertyName("memo")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Memo { get; }

        /// <summary>
        /// The scheduled transaction flag
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("flag_color")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public ScheduledTransactionSummaryFlag_color? Flag_color { get; }

        [System.Text.Json.Serialization.JsonPropertyName("account_id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.Guid Account_id { get; }

        [System.Text.Json.Serialization.JsonPropertyName("payee_id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Guid? Payee_id { get; }

        [System.Text.Json.Serialization.JsonPropertyName("category_id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Guid? Category_id { get; }

        /// <summary>
        /// If a transfer, the account_id which the scheduled transaction transfers to
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("transfer_account_id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Guid? Transfer_account_id { get; }

        /// <summary>
        /// Whether or not the scheduled transaction has been deleted.  Deleted scheduled transactions will only be included in delta requests.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("deleted")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public bool Deleted { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ScheduledTransactionDetail : ScheduledTransactionSummary
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public ScheduledTransactionDetail(System.Guid @account_id, string @account_name, long @amount, System.Guid? @category_id, string @category_name, System.DateTimeOffset @date_first, System.DateTimeOffset @date_next, bool @deleted, ScheduledTransactionSummaryFlag_color? @flag_color, ScheduledTransactionSummaryFrequency @frequency, System.Guid @id, string @memo, System.Guid? @payee_id, string @payee_name, System.Collections.Generic.ICollection<ScheduledSubTransaction> @subtransactions, System.Guid? @transfer_account_id)

            : base(account_id, amount, category_id, date_first, date_next, deleted, flag_color, frequency, id, memo, payee_id, transfer_account_id)

        {

            this.Account_name = @account_name;

            this.Payee_name = @payee_name;

            this.Category_name = @category_name;

            this.Subtransactions = @subtransactions;

        }
        [System.Text.Json.Serialization.JsonPropertyName("account_name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Account_name { get; }

        [System.Text.Json.Serialization.JsonPropertyName("payee_name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Payee_name { get; }

        /// <summary>
        /// The name of the category.  If a split scheduled transaction, this will be 'Split'.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("category_name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Category_name { get; }

        /// <summary>
        /// If a split scheduled transaction, the subtransactions.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("subtransactions")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<ScheduledSubTransaction> Subtransactions { get; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ScheduledSubTransaction
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public ScheduledSubTransaction(long @amount, System.Guid? @category_id, bool @deleted, System.Guid @id, string @memo, System.Guid? @payee_id, System.Guid @scheduled_transaction_id, System.Guid? @transfer_account_id)

        {

            this.Id = @id;

            this.Scheduled_transaction_id = @scheduled_transaction_id;

            this.Amount = @amount;

            this.Memo = @memo;

            this.Payee_id = @payee_id;

            this.Category_id = @category_id;

            this.Transfer_account_id = @transfer_account_id;

            this.Deleted = @deleted;

        }
        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.Guid Id { get; }

        [System.Text.Json.Serialization.JsonPropertyName("scheduled_transaction_id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.Guid Scheduled_transaction_id { get; }

        /// <summary>
        /// The scheduled subtransaction amount in milliunits format
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public long Amount { get; }

        [System.Text.Json.Serialization.JsonPropertyName("memo")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Memo { get; }

        [System.Text.Json.Serialization.JsonPropertyName("payee_id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Guid? Payee_id { get; }

        [System.Text.Json.Serialization.JsonPropertyName("category_id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Guid? Category_id { get; }

        /// <summary>
        /// If a transfer, the account_id which the scheduled subtransaction transfers to
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("transfer_account_id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Guid? Transfer_account_id { get; }

        /// <summary>
        /// Whether or not the scheduled subtransaction has been deleted. Deleted scheduled subtransactions will only be included in delta requests.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("deleted")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public bool Deleted { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class MonthSummariesResponse
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public MonthSummariesResponse(Data22 @data)

        {

            this.Data = @data;

        }
        [System.Text.Json.Serialization.JsonPropertyName("data")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public Data22 Data { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class MonthDetailResponse
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public MonthDetailResponse(Data23 @data)

        {

            this.Data = @data;

        }
        [System.Text.Json.Serialization.JsonPropertyName("data")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public Data23 Data { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class MonthSummary
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public MonthSummary(long @activity, int? @age_of_money, long @budgeted, bool @deleted, long @income, System.DateTimeOffset @month, string @note, long @to_be_budgeted)

        {

            this.Month = @month;

            this.Note = @note;

            this.Income = @income;

            this.Budgeted = @budgeted;

            this.Activity = @activity;

            this.To_be_budgeted = @to_be_budgeted;

            this.Age_of_money = @age_of_money;

            this.Deleted = @deleted;

        }
        [System.Text.Json.Serialization.JsonPropertyName("month")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset Month { get; }

        [System.Text.Json.Serialization.JsonPropertyName("note")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Note { get; }

        /// <summary>
        /// The total amount of transactions categorized to 'Inflow: Ready to Assign' in the month
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("income")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public long Income { get; }

        /// <summary>
        /// The total amount budgeted in the month
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("budgeted")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public long Budgeted { get; }

        /// <summary>
        /// The total amount of transactions in the month, excluding those categorized to 'Inflow: Ready to Assign'
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("activity")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public long Activity { get; }

        /// <summary>
        /// The available amount for 'Ready to Assign'
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("to_be_budgeted")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public long To_be_budgeted { get; }

        /// <summary>
        /// The Age of Money as of the month
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("age_of_money")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public int? Age_of_money { get; }

        /// <summary>
        /// Whether or not the month has been deleted.  Deleted months will only be included in delta requests.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("deleted")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public bool Deleted { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class MonthDetail : MonthSummary
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public MonthDetail(long @activity, int? @age_of_money, long @budgeted, System.Collections.Generic.ICollection<Category> @categories, bool @deleted, long @income, System.DateTimeOffset @month, string @note, long @to_be_budgeted)

            : base(activity, age_of_money, budgeted, deleted, income, month, note, to_be_budgeted)

        {

            this.Categories = @categories;

        }    /// <summary>
        /// The budget month categories.  Amounts (budgeted, activity, balance, etc.) are specific to the {month} parameter specified.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("categories")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<Category> Categories { get; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Type
    {

        [System.Runtime.Serialization.EnumMember(Value = @"uncategorized")]
        Uncategorized = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"unapproved")]
        Unapproved = 1,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Type2
    {

        [System.Runtime.Serialization.EnumMember(Value = @"uncategorized")]
        Uncategorized = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"unapproved")]
        Unapproved = 1,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Type3
    {

        [System.Runtime.Serialization.EnumMember(Value = @"uncategorized")]
        Uncategorized = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"unapproved")]
        Unapproved = 1,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Type4
    {

        [System.Runtime.Serialization.EnumMember(Value = @"uncategorized")]
        Uncategorized = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"unapproved")]
        Unapproved = 1,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Data
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public Data(User @user)

        {

            this.User = @user;

        }
        [System.Text.Json.Serialization.JsonPropertyName("user")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public User User { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Data2
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public Data2(System.Collections.Generic.ICollection<BudgetSummary> @budgets, BudgetSummary @default_budget)

        {

            this.Budgets = @budgets;

            this.Default_budget = @default_budget;

        }
        [System.Text.Json.Serialization.JsonPropertyName("budgets")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<BudgetSummary> Budgets { get; }

        [System.Text.Json.Serialization.JsonPropertyName("default_budget")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public BudgetSummary Default_budget { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Data3
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public Data3(BudgetDetail @budget, long @server_knowledge)

        {

            this.Budget = @budget;

            this.Server_knowledge = @server_knowledge;

        }
        [System.Text.Json.Serialization.JsonPropertyName("budget")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public BudgetDetail Budget { get; }

        /// <summary>
        /// The knowledge of the server
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("server_knowledge")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public long Server_knowledge { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Data4
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public Data4(BudgetSettings @settings)

        {

            this.Settings = @settings;

        }
        [System.Text.Json.Serialization.JsonPropertyName("settings")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public BudgetSettings Settings { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Data5
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public Data5(System.Collections.Generic.ICollection<Account> @accounts, long @server_knowledge)

        {

            this.Accounts = @accounts;

            this.Server_knowledge = @server_knowledge;

        }
        [System.Text.Json.Serialization.JsonPropertyName("accounts")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<Account> Accounts { get; }

        /// <summary>
        /// The knowledge of the server
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("server_knowledge")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public long Server_knowledge { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Data6
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public Data6(Account @account)

        {

            this.Account = @account;

        }
        [System.Text.Json.Serialization.JsonPropertyName("account")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public Account Account { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Data7
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public Data7(System.Collections.Generic.ICollection<CategoryGroupWithCategories> @category_groups, long @server_knowledge)

        {

            this.Category_groups = @category_groups;

            this.Server_knowledge = @server_knowledge;

        }
        [System.Text.Json.Serialization.JsonPropertyName("category_groups")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<CategoryGroupWithCategories> Category_groups { get; }

        /// <summary>
        /// The knowledge of the server
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("server_knowledge")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public long Server_knowledge { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Data8
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public Data8(Category @category)

        {

            this.Category = @category;

        }
        [System.Text.Json.Serialization.JsonPropertyName("category")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public Category Category { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum CategoryGoal_type
    {

        [System.Runtime.Serialization.EnumMember(Value = @"TB")]
        TB = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"TBD")]
        TBD = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"MF")]
        MF = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"NEED")]
        NEED = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"DEBT")]
        DEBT = 4,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Data9
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public Data9(Category @category, long @server_knowledge)

        {

            this.Category = @category;

            this.Server_knowledge = @server_knowledge;

        }
        [System.Text.Json.Serialization.JsonPropertyName("category")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public Category Category { get; }

        /// <summary>
        /// The knowledge of the server
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("server_knowledge")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public long Server_knowledge { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Data10
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public Data10(System.Collections.Generic.ICollection<Payee> @payees, long @server_knowledge)

        {

            this.Payees = @payees;

            this.Server_knowledge = @server_knowledge;

        }
        [System.Text.Json.Serialization.JsonPropertyName("payees")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<Payee> Payees { get; }

        /// <summary>
        /// The knowledge of the server
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("server_knowledge")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public long Server_knowledge { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Data11
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public Data11(Payee @payee)

        {

            this.Payee = @payee;

        }
        [System.Text.Json.Serialization.JsonPropertyName("payee")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public Payee Payee { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Data12
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public Data12(System.Collections.Generic.ICollection<PayeeLocation> @payee_locations)

        {

            this.Payee_locations = @payee_locations;

        }
        [System.Text.Json.Serialization.JsonPropertyName("payee_locations")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<PayeeLocation> Payee_locations { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Data13
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public Data13(PayeeLocation @payee_location)

        {

            this.Payee_location = @payee_location;

        }
        [System.Text.Json.Serialization.JsonPropertyName("payee_location")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public PayeeLocation Payee_location { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Data14
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public Data14(long @server_knowledge, System.Collections.Generic.ICollection<TransactionDetail> @transactions)

        {

            this.Transactions = @transactions;

            this.Server_knowledge = @server_knowledge;

        }
        [System.Text.Json.Serialization.JsonPropertyName("transactions")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<TransactionDetail> Transactions { get; }

        /// <summary>
        /// The knowledge of the server
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("server_knowledge")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public long Server_knowledge { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Data15
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public Data15(long @server_knowledge, System.Collections.Generic.ICollection<HybridTransaction> @transactions)

        {

            this.Transactions = @transactions;

            this.Server_knowledge = @server_knowledge;

        }
        [System.Text.Json.Serialization.JsonPropertyName("transactions")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<HybridTransaction> Transactions { get; }

        /// <summary>
        /// The knowledge of the server
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("server_knowledge")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public long Server_knowledge { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum SaveTransactionWithOptionalFieldsCleared
    {

        [System.Runtime.Serialization.EnumMember(Value = @"cleared")]
        Cleared = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"uncleared")]
        Uncleared = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"reconciled")]
        Reconciled = 2,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum SaveTransactionWithOptionalFieldsFlag_color
    {

        [System.Runtime.Serialization.EnumMember(Value = @"red")]
        Red = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"orange")]
        Orange = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"yellow")]
        Yellow = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"green")]
        Green = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"blue")]
        Blue = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"purple")]
        Purple = 5,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Data16
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public Data16(System.Collections.Generic.ICollection<string> @duplicate_import_ids, long @server_knowledge, TransactionDetail @transaction, System.Collections.Generic.ICollection<string> @transaction_ids, System.Collections.Generic.ICollection<TransactionDetail> @transactions)

        {

            this.Transaction_ids = @transaction_ids;

            this.Transaction = @transaction;

            this.Transactions = @transactions;

            this.Duplicate_import_ids = @duplicate_import_ids;

            this.Server_knowledge = @server_knowledge;

        }    /// <summary>
        /// The transaction ids that were saved
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("transaction_ids")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<string> Transaction_ids { get; }

        [System.Text.Json.Serialization.JsonPropertyName("transaction")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public TransactionDetail Transaction { get; }

        /// <summary>
        /// If multiple transactions were specified, the transactions that were saved
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("transactions")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<TransactionDetail> Transactions { get; }

        /// <summary>
        /// If multiple transactions were specified, a list of import_ids that were not created because of an existing `import_id` found on the same account
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("duplicate_import_ids")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<string> Duplicate_import_ids { get; }

        /// <summary>
        /// The knowledge of the server
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("server_knowledge")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public long Server_knowledge { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Data17
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public Data17(TransactionDetail @transaction)

        {

            this.Transaction = @transaction;

        }
        [System.Text.Json.Serialization.JsonPropertyName("transaction")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public TransactionDetail Transaction { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum TransactionSummaryCleared
    {

        [System.Runtime.Serialization.EnumMember(Value = @"cleared")]
        Cleared = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"uncleared")]
        Uncleared = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"reconciled")]
        Reconciled = 2,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum TransactionSummaryDebt_transaction_type
    {

        [System.Runtime.Serialization.EnumMember(Value = @"payment")]
        Payment = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"refund")]
        Refund = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"fee")]
        Fee = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"interest")]
        Interest = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"escrow")]
        Escrow = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"balanceAdjustment")]
        BalanceAdjustment = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"credit")]
        Credit = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"charge")]
        Charge = 7,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum TransactionSummaryFlag_color
    {

        [System.Runtime.Serialization.EnumMember(Value = @"red")]
        Red = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"orange")]
        Orange = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"yellow")]
        Yellow = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"green")]
        Green = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"blue")]
        Blue = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"purple")]
        Purple = 5,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum HybridTransactionType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"transaction")]
        Transaction = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"subtransaction")]
        Subtransaction = 1,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Data18
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public Data18(System.Collections.Generic.ICollection<string> @transaction_ids)

        {

            this.Transaction_ids = @transaction_ids;

        }    /// <summary>
        /// The list of transaction ids that were imported.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("transaction_ids")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<string> Transaction_ids { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Data19
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public Data19(Bulk @bulk)

        {

            this.Bulk = @bulk;

        }
        [System.Text.Json.Serialization.JsonPropertyName("bulk")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public Bulk Bulk { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Data20
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public Data20(System.Collections.Generic.ICollection<ScheduledTransactionDetail> @scheduled_transactions, long @server_knowledge)

        {

            this.Scheduled_transactions = @scheduled_transactions;

            this.Server_knowledge = @server_knowledge;

        }
        [System.Text.Json.Serialization.JsonPropertyName("scheduled_transactions")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<ScheduledTransactionDetail> Scheduled_transactions { get; }

        /// <summary>
        /// The knowledge of the server
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("server_knowledge")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public long Server_knowledge { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Data21
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public Data21(ScheduledTransactionDetail @scheduled_transaction)

        {

            this.Scheduled_transaction = @scheduled_transaction;

        }
        [System.Text.Json.Serialization.JsonPropertyName("scheduled_transaction")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public ScheduledTransactionDetail Scheduled_transaction { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum ScheduledTransactionSummaryFlag_color
    {

        [System.Runtime.Serialization.EnumMember(Value = @"red")]
        Red = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"orange")]
        Orange = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"yellow")]
        Yellow = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"green")]
        Green = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"blue")]
        Blue = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"purple")]
        Purple = 5,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum ScheduledTransactionSummaryFrequency
    {

        [System.Runtime.Serialization.EnumMember(Value = @"never")]
        Never = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"daily")]
        Daily = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"weekly")]
        Weekly = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"everyOtherWeek")]
        EveryOtherWeek = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"twiceAMonth")]
        TwiceAMonth = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"every4Weeks")]
        Every4Weeks = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"monthly")]
        Monthly = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"everyOtherMonth")]
        EveryOtherMonth = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"every3Months")]
        Every3Months = 8,

        [System.Runtime.Serialization.EnumMember(Value = @"every4Months")]
        Every4Months = 9,

        [System.Runtime.Serialization.EnumMember(Value = @"twiceAYear")]
        TwiceAYear = 10,

        [System.Runtime.Serialization.EnumMember(Value = @"yearly")]
        Yearly = 11,

        [System.Runtime.Serialization.EnumMember(Value = @"everyOtherYear")]
        EveryOtherYear = 12,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Data22
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public Data22(System.Collections.Generic.ICollection<MonthSummary> @months, long @server_knowledge)

        {

            this.Months = @months;

            this.Server_knowledge = @server_knowledge;

        }
        [System.Text.Json.Serialization.JsonPropertyName("months")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<MonthSummary> Months { get; }

        /// <summary>
        /// The knowledge of the server
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("server_knowledge")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public long Server_knowledge { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Data23
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public Data23(MonthDetail @month)

        {

            this.Month = @month;

        }
        [System.Text.Json.Serialization.JsonPropertyName("month")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public MonthDetail Month { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Bulk
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public Bulk(System.Collections.Generic.ICollection<string> @duplicate_import_ids, System.Collections.Generic.ICollection<string> @transaction_ids)

        {

            this.Transaction_ids = @transaction_ids;

            this.Duplicate_import_ids = @duplicate_import_ids;

        }    /// <summary>
        /// The list of Transaction ids that were created.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("transaction_ids")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<string> Transaction_ids { get; }

        /// <summary>
        /// If any Transactions were not created because they had an `import_id` matching a transaction already on the same account, the specified import_id(s) will be included in this list.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("duplicate_import_ids")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<string> Duplicate_import_ids { get; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    internal class DateFormatConverter : System.Text.Json.Serialization.JsonConverter<System.DateTimeOffset>
    {
        public override System.DateTimeOffset Read(ref System.Text.Json.Utf8JsonReader reader, System.Type typeToConvert, System.Text.Json.JsonSerializerOptions options)
        {
            var dateTime = reader.GetString();
            if (dateTime == null)
            {
                throw new System.Text.Json.JsonException("Unexpected JsonTokenType.Null");
            }

            return System.DateTimeOffset.Parse(dateTime);
        }

        public override void Write(System.Text.Json.Utf8JsonWriter writer, System.DateTimeOffset value, System.Text.Json.JsonSerializerOptions options)
        {
            writer.WriteStringValue(value.ToString("yyyy-MM-dd"));
        }
    }



    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ApiException : System.Exception
    {
        public int StatusCode { get; private set; }

        public string Response { get; private set; }

        public System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> Headers { get; private set; }

        public ApiException(string message, int statusCode, string response, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, System.Exception innerException)
            : base(message + "\n\nStatus: " + statusCode + "\nResponse: \n" + ((response == null) ? "(null)" : response.Substring(0, response.Length >= 512 ? 512 : response.Length)), innerException)
        {
            StatusCode = statusCode;
            Response = response;
            Headers = headers;
        }

        public override string ToString()
        {
            return string.Format("HTTP Response: \n\n{0}\n\n{1}", Response, base.ToString());
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ApiException<TResult> : ApiException
    {
        public TResult Result { get; private set; }

        public ApiException(string message, int statusCode, string response, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, TResult result, System.Exception innerException)
            : base(message, statusCode, response, headers, innerException)
        {
            Result = result;
        }
    }

}

#pragma warning restore  108
#pragma warning restore  114
#pragma warning restore  472
#pragma warning restore  612
#pragma warning restore 1573
#pragma warning restore 1591
#pragma warning restore 8073
#pragma warning restore 3016
#pragma warning restore 8603
#pragma warning restore 8604